#!/usr/bin/env python3
"""
tools/agent.py

Autonomous Codex agent: reads instructions from an Issue,
asks OpenAI Codex to generate a patch, applies it, tests,
and opens a PR with the changes.
"""
import os
import time
import subprocess
import openai
from github import Github, InputGitAuthor

# Configuration from env
OPENAI_API_KEY = os.environ["OPENAI_API_KEY"]
GITHUB_APP_ID = os.environ["GITHUB_APP_ID"]
GITHUB_PRIVATE_KEY = os.environ["GITHUB_PRIVATE_KEY"]
REPO_NAME = os.environ["GITHUB_REPOSITORY"]
ISSUE_NUMBER = os.environ.get("ISSUE_NUMBER", "")

openai.api_key = OPENAI_API_KEY

# Authenticate to GitHub as the App
g = Github(app_id=GITHUB_APP_ID, private_key=GITHUB_PRIVATE_KEY)
repo = g.get_repo(REPO_NAME)

# Fetch instructions from Issue body
instructions = repo.get_issue(int(ISSUE_NUMBER)).body if ISSUE_NUMBER else ""

# Prompt Codex for a diff
prompt = f"""
You are Codex. Based on these instructions:
"""
{instructions}
"""
Generate a unified diff for this repo root, modifying or adding files as needed.
Only output the diff, nothing else.
"""

resp = openai.Completion.create(
    engine="code-davinci-002",
    prompt=prompt,
    temperature=0.2,
    max_tokens=1500
)
diff = resp.choices[0].text

# Apply the patch
p = subprocess.Popen(["patch", "-p1"], stdin=subprocess.PIPE)
stdout, stderr = p.communicate(diff.encode())
if p.returncode != 0:
    raise RuntimeError("Patch failed:\n" + diff)

# Run tests and lint
subprocess.check_call(["bash", "scripts/lint-and-test.sh"])

# Create branch and push changes
branch = f"codex/auto-{int(time.time())}"
main_sha = repo.get_branch("main").commit.sha
repo.create_git_ref(ref=f"refs/heads/{branch}", sha=main_sha)
subprocess.check_call(["git", "checkout", "-b", branch])
subprocess.check_call(["git", "add", "-A"])
subprocess.check_call(["git", "commit", "-m", f"Auto-patch: {instructions[:50]}"])
subprocess.check_call(["git", "push", "origin", branch])

# Open PR
author = InputGitAuthor("Sterling-Bot", "sterling-bot@example.com")
repo.create_pull(
    title=f"Auto-PR: {instructions[:60]}",
    body="This PR was generated by Codex and tests passed. Please review.",
    head=branch,
    base="main",
    draft=False
)
