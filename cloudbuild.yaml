# cloudbuild.yaml
# CI/CD pipeline for the Sterling HA Project
#
# This configuration defines the build steps for Google Cloud Build:
# 1. Install dependencies and run tests
# 2. Build the main Sterling HA Docker image
# 3. Build the Sterling OS add-on Docker image
# 4. Push images to Google Container Registry
# 5. Deploy to Cloud Run (optional)
#
# To use this configuration:
# 1. Set up a Google Cloud Build trigger
# 2. Configure the substitution variables as needed
# 3. Ensure your Google Cloud project has the necessary APIs enabled

steps:
  # ---------------------------------------------------------------------------
  # Step 1: Install Python Dependencies & Run Unit Tests
  # ---------------------------------------------------------------------------
  - name: 'python:3.12-slim'
    id: 'Install Dependencies and Run Tests'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Installing system dependencies..."
        apt-get update && apt-get install -y --no-install-recommends git curl
        
        echo "Installing Python dependencies..."
        pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        
        echo "Scaffolding phase stubs..."
        python scripts/scaffold_phases.py
        
        echo "Running unit tests..."
        python -m pytest tests/test_phase_* -v
        
        echo "Running shell script linting..."
        # Install shellcheck for script validation
        apt-get install -y shellcheck
        shellcheck -e SC2181 scripts/*.sh || echo "Warning: Some shell scripts have linting issues"

  # ---------------------------------------------------------------------------
  # Step 2: Build the Main Docker Image
  # ---------------------------------------------------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Sterling HA Image'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '-f'
      - 'Dockerfile'
      - '.'

  # ---------------------------------------------------------------------------
  # Step 3: Build Sterling OS Add-on Image
  # ---------------------------------------------------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Sterling OS Add-on Image'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}-addon:${COMMIT_SHA}'
      - '-f'
      - 'addons/sterling_os/Dockerfile'
      - '.'

  # ---------------------------------------------------------------------------
  # Step 4: Push Main Image to Registry
  # ---------------------------------------------------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Sterling HA Image'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'

  # ---------------------------------------------------------------------------
  # Step 5: Push Add-on Image to Registry
  # ---------------------------------------------------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Sterling OS Add-on Image'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}-addon:${COMMIT_SHA}'

  # ---------------------------------------------------------------------------
  # Step 6: Deploy to Cloud Run (Optional)
  # ---------------------------------------------------------------------------
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to Cloud Run'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=5000'
      - '--quiet'
      - '--allow-unauthenticated'

# Substitutions that can be passed into the build trigger
substitutions:
  _REGION: 'us-central1'
  _REPO_NAME: 'sterling-ha-repo'
  _SERVICE_NAME: 'sterling-ha-project'

# Define the final images that will be produced by this build
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}-addon:${COMMIT_SHA}'

# Build options
options:
  # Use high-performance machine type for faster builds
  machineType: 'E2_HIGHCPU_8'
  # Set disk size for builds that need more space
  diskSizeGb: 100

# Increase the default timeout for potentially complex builds
timeout: '1800s'